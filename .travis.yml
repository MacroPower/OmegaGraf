language: csharp
dist: xenial
sudo: required
mono: none
dotnet: 3.0

addons:
  sonarcloud:
    organization: "omegagraf"
    token:
      secure: iVY3yjGjnp9Gke8Y87zMQ8/WDxWjqVwLUggwfYfJvbs6tsz8r5v2fCNKvLVQ5ogopCSch1LuSs+T5fa0mbzvX7sfKkq3Loe1/+BAwqmiDALTcyALiY6W57GjiZbFwWuIBN807jqFbXPRmtGuYgwdLcy84L6j7fAYjtbZZMzKjz9POi+bHoHuBy3CQUzGBy2sSOytgBOxlJV62syIlnhHKHsHMGjZfrJl37psEjsBpNgR2SmlE+f02//KHZ3bIb1nR62xGzqONfzpuQEIbFiu+nNseXB2/s70G6XQqIHOdtcHPf5MuT6INp/Z4Cdj/1LL3/uVNVFqHCrwVFkE2ySrNuz2Kmukn/57fqqLyeNiIpnSoRtYQAOqimxUiSiyxTAgeAhfQOv/fhb9GKXJgdTtiaevRLNmkjh92c3XPWMfMdT24PW621rijFpuKfMbnry/4fP1aW9OGmvmRhpNroy4eHFuxBjFrYESc27jKoe6fuxWTewlxcmLRBFhAXz6RIkZuEtmYorJOZUJoKyJeLCRFYdh54qOIUrpQh6wPr9UBosYtLzFZLUhsE6hzhHulhTNEGr+m8xqbCuKD6mMM0udg5d0LX3szoC/M9qk2uvoTQmkHNvl4ynYRA1mU96Qh7ImhJSim3n2D09QTf9ei56sh5kI+S6rQvCVPcxr5se1s7c=

branches:
  only:
    - master

install:
  - wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
  - sudo dpkg -i packages-microsoft-prod.deb
  - sudo apt-get update
  - sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common
  - RELEASE_ID=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
  - curl -fsSL "https://download.docker.com/linux/$RELEASE_ID/gpg" | sudo apt-key add -
  - RELEASE_CODE=$(lsb_release -cs)
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$RELEASE_ID $RELEASE_CODE stable"
  - apt-cache policy docker-ce
  - sudo apt-get update
  - sudo apt-get install dotnet-sdk-2.2 docker-ce
  - dotnet tool install --global dotnet-sonarscanner
  - sudo systemctl status docker
  - sudo usermod -aG docker $USER
  - sudo mkdir /docker
  - sudo chmod -R 777 /docker
  - sudo chown -R $USER:$USER /docker
  - sudo setfacl -Rm d:g:$USER:rwx,g:$USER:rwx /docker
  - sudo setfacl -Rm d:u:$USER:rwx,u:$USER:rwx /docker
  - ls -l /
  - ls -l /docker

before_script:
  - export PATH="$PATH:$HOME/.dotnet/tools"

script:
  - dotnet sonarscanner begin /d:sonar.login="$SONAR_TOKEN" || true
  - dotnet restore
  - dotnet build
  - netstat -tulnp
  - dotnet test
  - docker ps -a
  - netstat -tulnp
  - for c in $(docker ps -a --format="{{.Names}}"); do docker container logs $c; done
  - ls -l /docker
  - ls -l /docker/grafana
  - ls -l /docker/prometheus
  - dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN" || true